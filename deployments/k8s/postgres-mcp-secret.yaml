apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: tas-mcp
  labels:
    app: postgres-database
    tier: database
    component: credentials
type: Opaque
data:
  # PostgreSQL Database Credentials (base64 encoded)
  # Default password: "password" (change in production)
  POSTGRES_PASSWORD: cGFzc3dvcmQ=
  
  # Database URL for MCP server
  # postgresql://postgres:password@postgres-database:5432/sampledb
  DATABASE_URL: cG9zdGdyZXNxbDovL3Bvc3RncmVzOnBhc3N3b3JkQHBvc3RncmVzLWRhdGFiYXNlOjU0MzIvc2FtcGxlZGI=

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-mcp-credentials
  namespace: tas-mcp
  labels:
    app: postgres-mcp-server
    tier: database
    component: mcp-server
type: Opaque
data:
  # MCP Server specific credentials and configuration
  
  # Database connection for read-only access
  # postgresql://postgres:password@postgres-database:5432/sampledb?sslmode=disable
  DATABASE_URL: cG9zdGdyZXNxbDovL3Bvc3RncmVzOnBhc3N3b3JkQHBvc3RncmVzLWRhdGFiYXNlOjU0MzIvc2FtcGxlZGI/c3NsbW9kZT1kaXNhYmxl
  
  # Optional: API keys for external integrations (if needed)
  API_KEY: ""
  
  # Optional: JWT secret for authentication (if needed)
  JWT_SECRET: ""

---
# Note: In production, create these secrets using kubectl with actual secure values:
#
# kubectl create secret generic postgres-credentials \
#   --from-literal=POSTGRES_PASSWORD=your-secure-password \
#   --from-literal=DATABASE_URL=postgresql://user:pass@host:5432/db \
#   -n tas-mcp
#
# kubectl create secret generic postgres-mcp-credentials \
#   --from-literal=DATABASE_URL=postgresql://readonly:pass@host:5432/db \
#   -n tas-mcp